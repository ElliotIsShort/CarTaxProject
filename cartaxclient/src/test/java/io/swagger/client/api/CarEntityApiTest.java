/*
 * Api Documentation
 * Api Documentation
 *
 * OpenAPI spec version: 1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.api;

import io.swagger.client.ApiException;
import io.swagger.client.model.EntityModelCustomer;
import io.swagger.client.model.EntityModelRegistration;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for CarEntityApi
 */
@Ignore
public class CarEntityApiTest {

    private final CarEntityApi api = new CarEntityApi();

    
    /**
     * carCar
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void carCarUsingDELETETest() throws ApiException {
        Integer id = null;
        api.carCarUsingDELETE(id);

        // TODO: test validations
    }
    
    /**
     * carCar
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void carCarUsingGETTest() throws ApiException {
        Integer id = null;
        EntityModelRegistration response = api.carCarUsingGET(id);

        // TODO: test validations
    }
    
    /**
     * carCar
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void carCarUsingPATCHTest() throws ApiException {
        String body = null;
        Integer id = null;
        EntityModelRegistration response = api.carCarUsingPATCH(body, id);

        // TODO: test validations
    }
    
    /**
     * carCar
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void carCarUsingPOSTTest() throws ApiException {
        String body = null;
        Integer id = null;
        EntityModelRegistration response = api.carCarUsingPOST(body, id);

        // TODO: test validations
    }
    
    /**
     * carCar
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void carCarUsingPUTTest() throws ApiException {
        String body = null;
        Integer id = null;
        EntityModelRegistration response = api.carCarUsingPUT(body, id);

        // TODO: test validations
    }
    
    /**
     * carCustomerid
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void carCustomeridUsingDELETETest() throws ApiException {
        Integer id = null;
        api.carCustomeridUsingDELETE(id);

        // TODO: test validations
    }
    
    /**
     * carCustomerid
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void carCustomeridUsingGETTest() throws ApiException {
        Integer id = null;
        EntityModelCustomer response = api.carCustomeridUsingGET(id);

        // TODO: test validations
    }
    
    /**
     * carCustomerid
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void carCustomeridUsingPATCHTest() throws ApiException {
        String body = null;
        Integer id = null;
        EntityModelCustomer response = api.carCustomeridUsingPATCH(body, id);

        // TODO: test validations
    }
    
    /**
     * carCustomerid
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void carCustomeridUsingPOSTTest() throws ApiException {
        String body = null;
        Integer id = null;
        EntityModelCustomer response = api.carCustomeridUsingPOST(body, id);

        // TODO: test validations
    }
    
    /**
     * carCustomerid
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void carCustomeridUsingPUTTest() throws ApiException {
        String body = null;
        Integer id = null;
        EntityModelCustomer response = api.carCustomeridUsingPUT(body, id);

        // TODO: test validations
    }
    
}
