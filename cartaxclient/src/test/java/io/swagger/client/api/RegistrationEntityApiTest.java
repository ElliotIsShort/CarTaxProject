/*
 * Api Documentation
 * Api Documentation
 *
 * OpenAPI spec version: 1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.api;

import io.swagger.client.ApiException;
import io.swagger.client.model.EntityModelCar;
import io.swagger.client.model.EntityModelTax;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for RegistrationEntityApi
 */
@Ignore
public class RegistrationEntityApiTest {

    private final RegistrationEntityApi api = new RegistrationEntityApi();

    
    /**
     * registrationCarid
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void registrationCaridUsingDELETETest() throws ApiException {
        Integer id = null;
        api.registrationCaridUsingDELETE(id);

        // TODO: test validations
    }
    
    /**
     * registrationCarid
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void registrationCaridUsingGETTest() throws ApiException {
        Integer id = null;
        EntityModelCar response = api.registrationCaridUsingGET(id);

        // TODO: test validations
    }
    
    /**
     * registrationCarid
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void registrationCaridUsingPATCHTest() throws ApiException {
        String body = null;
        Integer id = null;
        EntityModelCar response = api.registrationCaridUsingPATCH(body, id);

        // TODO: test validations
    }
    
    /**
     * registrationCarid
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void registrationCaridUsingPOSTTest() throws ApiException {
        String body = null;
        Integer id = null;
        EntityModelCar response = api.registrationCaridUsingPOST(body, id);

        // TODO: test validations
    }
    
    /**
     * registrationCarid
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void registrationCaridUsingPUTTest() throws ApiException {
        String body = null;
        Integer id = null;
        EntityModelCar response = api.registrationCaridUsingPUT(body, id);

        // TODO: test validations
    }
    
    /**
     * registrationTaxid
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void registrationTaxidUsingDELETETest() throws ApiException {
        Integer id = null;
        api.registrationTaxidUsingDELETE(id);

        // TODO: test validations
    }
    
    /**
     * registrationTaxid
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void registrationTaxidUsingGETTest() throws ApiException {
        Integer id = null;
        EntityModelTax response = api.registrationTaxidUsingGET(id);

        // TODO: test validations
    }
    
    /**
     * registrationTaxid
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void registrationTaxidUsingPATCHTest() throws ApiException {
        String body = null;
        Integer id = null;
        EntityModelTax response = api.registrationTaxidUsingPATCH(body, id);

        // TODO: test validations
    }
    
    /**
     * registrationTaxid
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void registrationTaxidUsingPOSTTest() throws ApiException {
        String body = null;
        Integer id = null;
        EntityModelTax response = api.registrationTaxidUsingPOST(body, id);

        // TODO: test validations
    }
    
    /**
     * registrationTaxid
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void registrationTaxidUsingPUTTest() throws ApiException {
        String body = null;
        Integer id = null;
        EntityModelTax response = api.registrationTaxidUsingPUT(body, id);

        // TODO: test validations
    }
    
}
